{
    "name": "documentReview",
    "description": "Sub process to send new documents to newRequest when review is requested.",
    "blueprint_spec": {
        "lanes": [
            {
                "id": "BOT_X_BACKOFFICE",
                "name": "BOT_X_BACKOFFICE",
                "rule": [
                    "fn",
                    [
                        "actor_data",
                        "bag"
                    ],
                    [
                        "or",
                        [
                            "eval",
                            [
                                "apply",
                                "or",
                                [
                                    "map",
                                    [
                                        "fn",
                                        [
                                            "v"
                                        ],
                                        [
                                            "or",
                                            [
                                                "=",
                                                "v",
                                                [
                                                    "`",
                                                    "adminRequests"
                                                ]
                                            ],
                                            [
                                                "=",
                                                "v",
                                                [
                                                    "`",
                                                    "botGeneral"
                                                ]
                                            ],
                                            [
                                                "=",
                                                "v",
                                                [
                                                    "`",
                                                    "botRealtor"
                                                ]
                                            ],
                                            [
                                                "=",
                                                "v",
                                                [
                                                    "`",
                                                    "botLead"
                                                ]
                                            ]
                                        ]
                                    ],
                                    [
                                        "get",
                                        "actor_data",
                                        [
                                            "`",
                                            "claims"
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ]
                ]
            }
        ],
        "nodes": [
            {
                "id": "START",
                "name": "Start node",
                "next": "REQUEST-1",
                "type": "Start",
                "lane_id": "BOT_X_BACKOFFICE",
                "parameters": {
                    "input_schema": {
                        "type": "object",
                        "required": [
                            "request_id",
                            "party_number",
                            "bot_phone_number",
                            "buyer_profile_id",
                            "chat_id",
                            "chat_participant_id"
                        ],
                        "properties": {
                            "chat_id": {
                                "type": "string"
                            },
                            "request_id": {
                                "type": "string"
                            },
                            "party_number": {
                                "type": "string"
                            },
                            "bot_phone_number": {
                                "type": "string"
                            },
                            "buyer_profile_id": {
                                "type": "string"
                            },
                            "chat_participant_id": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": true
                    }
                }
            },
            {
                "id": "REQUEST-1",
                "name": "Get request details",
                "next": "REQUEST-2",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "HTTP",
                "parameters": {
                    "input": {},
                    "request": {
                        "url": {
                            "$mustache": "http://aprova_services:3000/rpc/requests/{{bag.request_id}}"
                        },
                        "verb": "GET",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "REQUEST-2",
                "name": "Set request details to bag",
                "next": "DOCUMENT-1",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "documents_map": [
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* da frente da sua *CNH*.",
                                "document": "CNH_FRONT",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* da frente da sua *CNH*, por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do verso da sua *CNH*.",
                                "document": "CNH_BACK",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* do verso da *CNH*, por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* da frente do seu *RG*.",
                                "document": "RG_FRONT",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* da frente do seu *RG*, por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do verso do seu *RG*.",
                                "document": "RG_BACK",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* do verso do seu *RG*, por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do *Comprovante de Residência*.\nOBS: Verifique se está dentro do prazo de 60 dias.\n(pode ser fatura de cartão, gás, água, conta de telefone ou celular, etc).",
                                "document": "DOCUMENT_RESIDENCE_PROOF",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* do *Comprovante de Residência*, por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do *Pró-labore* ou *Imposto de Renda vigente* (da pessoa que irá compor renda com você).",
                                "document": "PROLABORE",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* do *Pró-labore* ou *Imposto de Renda vigente* (da pessoa que irá compor renda com você), por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do seu *Contracheque*.",
                                "document": "FORMAL",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* da frente do seu *Contracheque*, por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do seu *Extrato Bancário*.",
                                "document": "INFORMAL",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* da frente do seu *Extrato Bancário*, por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do seu *Contrato Social*.",
                                "document": "EMPRESARIO(A)",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* da frente do seu *Contrato Social*, por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* da frente da *CNH* (da pessoa que irá compor renda com você).",
                                "document": "SECOND_CNH_FRONT",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* da frente da *CNH* (da pessoa que irá compor renda com você), por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do verso da *CNH* (da pessoa que irá compor renda com você).",
                                "document": "SECOND_CNH_BACK",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* do verso da *CNH* (da pessoa que irá compor renda com você), por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* da frente do *RG* (da pessoa que irá compor renda com você).",
                                "document": "SECOND_RG_FRONT",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* da frente do *RG* (da pessoa que irá compor renda com você), por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do verso do *RG* (da pessoa que irá compor renda com você).",
                                "document": "SECOND_RG_BACK",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* do verso do *RG* (da pessoa que irá compor renda com você), por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do *Comprovante de Residência* (da pessoa que irá compor renda com você).\nOBS: Verifique se está dentro do prazo de 60 dias.\n(pode ser fatura de cartão, gás, água, conta de telefone ou celular, etc).",
                                "document": "SECOND_DOCUMENT_RESIDENCE_PROOF",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* do *Comprovante de Residência* (da pessoa que irá compor renda com você), por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do *Pró-labore* ou *Imposto de Renda vigente* (da pessoa que irá compor renda com você).",
                                "document": "SECOND_PROLABORE",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* do *Pró-labore* ou *Imposto de Renda vigente*, por favor (da pessoa que irá compor renda com você)."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do *Contracheque* (da pessoa que irá compor renda com você).",
                                "document": "SECOND_FORMAL",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* da frente do *Contracheque* (da pessoa que irá compor renda com você), por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do *Extrato Bancário* (da pessoa que irá compor renda com você).",
                                "document": "SECOND_INFORMAL",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* da frente do *Extrato Bancário* (da pessoa que irá compor renda com você), por favor."
                            },
                            {
                                "message": "Bela: Por favor, me envie uma *foto* ou *PDF* do *Contrato Social* (da pessoa que irá compor renda com você).",
                                "document": "SECOND_EMPRESARIO(A)",
                                "error_message": "Bela: Para prosseguir, preciso que você me envie uma *foto* ou *PDF* da frente do *Contrato Social* (da pessoa que irá compor renda com você), por favor."
                            }
                        ],
                        "request_details": {
                            "$ref": "result.data"
                        },
                        "documents_length": {
                            "$ref": "result.data.proofs.length"
                        },
                        "documents_position": 0
                    }
                }
            },
            {
                "id": "DOCUMENT-1",
                "name": "Check document analyze position",
                "next": {
                    "true": "DOCUMENT-2",
                    "default": "EXIT"
                },
                "type": "Flow",
                "lane_id": "BOT_X_BACKOFFICE",
                "parameters": {
                    "input": {
                        "key": {
                            "$js": "({bag}) => bag.documents_position <= (bag.documents_length - 1)"
                        }
                    }
                }
            },
            {
                "id": "DOCUMENT-2",
                "name": "Check id document was rejected",
                "next": {
                    "true": "DOCUMENT-2-A-1",
                    "default": "NEXT-DOCUMENT"
                },
                "type": "Flow",
                "lane_id": "BOT_X_BACKOFFICE",
                "parameters": {
                    "input": {
                        "key": {
                            "$js": "({bag}) => bag.request_details.proofs[bag.documents_position].proof_status === 'REJECTED'"
                        }
                    }
                }
            },
            {
                "id": "NEXT-DOCUMENT",
                "name": "Set request details to bag",
                "next": "DOCUMENT-1",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "documents_position": {
                            "$js": "({bag}) => bag.documents_position + 1"
                        }
                    }
                }
            },
            {
                "id": "DOCUMENT-2-A-1",
                "name": "User uploading documents",
                "next": "DOCUMENT-3",
                "type": "UserTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "parameters": {
                    "input": {
                        "message": {
                            "$js": "({bag}) => bag.documents_map.filter((document) => document.document === bag.request_details.proofs[bag.documents_position].type)[0].message"
                        },
                        "party_number": {
                            "$ref": "bag.party_number"
                        },
                        "activity_schema": {
                            "type": "object",
                            "required": [
                                "external_id"
                            ],
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "external_id": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "action": "USER_UPLOADING_DOCUMENTS"
                }
            },
            {
                "id": "DOCUMENT-2-B-1",
                "name": "User uploading documents",
                "next": "DOCUMENT-3",
                "type": "UserTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "parameters": {
                    "input": {
                        "message": {
                            "$js": "({bag}) => bag.documents_map.filter((document) => document.document === bag.request_details.proofs[bag.documents_position].type)[0].error_message"
                        },
                        "party_number": {
                            "$ref": "bag.party_number"
                        },
                        "activity_schema": {
                            "type": "object",
                            "required": [
                                "external_id"
                            ],
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "external_id": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "action": "USER_UPLOADING_DOCUMENTS"
                }
            },
            {
                "id": "DOCUMENT-3",
                "name": "Set external_id and message received to bag",
                "next": "DOCUMENT-4",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "message": {
                            "$ref": "result.activities[0].data.message"
                        },
                        "external_id": {
                            "$ref": "result.activities[0].data.external_id"
                        }
                    }
                }
            },
            {
                "id": "DOCUMENT-4",
                "name": "Check if any media file was received from customer.",
                "next": {
                    "true": "DOCUMENT-4-A-1",
                    "default": "DOCUMENT-2-B-1"
                },
                "type": "Flow",
                "lane_id": "BOT_X_BACKOFFICE",
                "parameters": {
                    "input": {
                        "key": {
                            "$js": "({bag}) => (!!bag.external_id)"
                        }
                    }
                }
            },
            {
                "id": "DOCUMENT-4-A-1",
                "name": "Save BOT message on entity message from USER_UPLOADING_DOCUMENTS",
                "next": "DOCUMENT-4-A-2",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "actor": {
                            "$ref": "bag.bot_phone_number"
                        },
                        "chat_id": {
                            "$ref": "bag.chat_id"
                        },
                        "content": {
                            "$js": "({bag}) => bag.documents_map.filter((document) => document.document === bag.request_details.proofs[bag.documents_position].type)[0].message"
                        },
                        "external_id": null,
                        "chat_participant_id": null
                    },
                    "request": {
                        "url": {
                            "$mustache": "http://aprova_services:3000/rpc/messages"
                        },
                        "verb": "POST",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        203,
                        204,
                        400
                    ]
                }
            },
            {
                "id": "DOCUMENT-4-A-2",
                "name": "get chat details and messages by chat ID.",
                "next": "DOCUMENT-4-A-3",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "HTTP",
                "parameters": {
                    "input": {},
                    "request": {
                        "url": {
                            "$mustache": "http://aprova_services:3000/rpc/chat/{{bag.chat_id}}"
                        },
                        "verb": "GET",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "DOCUMENT-4-A-3",
                "name": "Save messages history to bag.",
                "next": "DOCUMENT-5",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "messages": {
                            "$ref": "result.data.messages"
                        }
                    }
                }
            },
            {
                "id": "DOCUMENT-5",
                "name": "Create Proofs and Attachments",
                "next": "DOCUMENT-6",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "document": {
                            "$js": "({bag}) => bag.documents_map.filter((document) => document.document === bag.request_details.proofs[bag.documents_position].type)[0].document"
                        },
                        "profile_id": {
                            "$ref": "bag.buyer_profile_id"
                        },
                        "request_id": {
                            "$ref": "bag.request_id"
                        },
                        "external_id": {
                            "$ref": "bag.external_id"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "http://aprova_services:3000/rpc/proofs"
                        },
                        "verb": "POST",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "DOCUMENT-6",
                "name": "Save on table message the media file received.",
                "next": "DOCUMENT-7",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "actor": {
                            "$ref": "bag.party_number"
                        },
                        "chat_id": {
                            "$ref": "bag.chat_id"
                        },
                        "content": {
                            "$js": "({bag}) => bag.message ? bag.message : null"
                        },
                        "external_id": {
                            "$ref": "bag.external_id"
                        },
                        "chat_participant_id": {
                            "$ref": "bag.buyer_chat_participant_id"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "http://aprova_services:3000/rpc/messages"
                        },
                        "verb": "POST",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        203,
                        204,
                        400
                    ]
                }
            },
            {
                "id": "DOCUMENT-7",
                "name": "get chat details and messages by chat ID.",
                "next": "DOCUMENT-8",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "HTTP",
                "parameters": {
                    "input": {},
                    "request": {
                        "url": {
                            "$mustache": "http://aprova_services:3000/rpc/chat/{{bag.chat_id}}"
                        },
                        "verb": "GET",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "DOCUMENT-8",
                "name": "Save messages history to bag.",
                "next": "DOCUMENT-9",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "messages": {
                            "$ref": "result.data.messages"
                        },
                        "attachment_id": {
                            "$js": "({bag}) => bag.request_details.proofs[bag.documents_position].attachment_id"
                        },
                        "documents_position": {
                            "$js": "({bag}) => bag.documents_position + 1"
                        }
                    }
                }
            },
            {
                "id": "DOCUMENT-9",
                "name": "Delete old proof from request.",
                "next": "DOCUMENT-1",
                "type": "SystemTask",
                "lane_id": "BOT_X_BACKOFFICE",
                "category": "HTTP",
                "parameters": {
                    "input": {},
                    "request": {
                        "url": {
                            "$mustache": "http://aprova_services:3000/rpc/proofs/delete/{{bag.attachment_id}}"
                        },
                        "verb": "DELETE",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "EXIT",
                "name": "Finish review documents.",
                "next": null,
                "type": "Finish",
                "lane_id": "BOT_X_BACKOFFICE"
            }
        ],
        "prepare": [],
        "environment": {},
        "requirements": [
            "core"
        ]
    }
}