{
    "name": "resetClient",
    "description": "Workflow para para resetar cliente",
    "blueprint_spec": {
        "lanes": [
            {
                "id": "RESET_CLIENT",
                "name": "resetClient",
                "rule": {
                    "$js": "({actor_data}) => actor_data.claims.includes('resetClient') || actor_data.claims.includes('requestBot');"
                }
            },
            {
                "id": "RESET_CLIENT_BACKOFFICE_ID",
                "name": "resetClient and backoffice",
                "rule": {
                    "$js": "({actor_data, bag}) => actor_data.claims.includes('resetClient') && actor_data.actor_id === bag.actor_id;"
                }
            }
        ],
        "nodes": [
            {
                "id": "START",
                "name": "Start",
                "next": "SET-ACTOR-ID-TO-BAG",
                "type": "Start",
                "lane_id": "RESET_CLIENT",
                "parameters": {
                    "input_schema": {
                        "type": "object",
                        "properties": {
                            "phone_number": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            {
                "id": "SET-ACTOR-ID-TO-BAG",
                "name": "Set actor_id to Bag",
                "next": "THERE-IS-PHONE-NUMBER-IN-BAG",
                "type": "SystemTask",
                "lane_id": "RESET_CLIENT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "actor_id": {
                            "$ref": "actor_data.actor_id"
                        }
                    }
                }
            },
            {
                "id": "THERE-IS-PHONE-NUMBER-IN-BAG",
                "name": "Verify if exist phone_number on bag",
                "next": {
                    "true": "VALIDATE-PHONE-NUMBER",
                    "default": "SUBMIT-PHONE-NUMBER"
                },
                "type": "Flow",
                "lane_id": "RESET_CLIENT",
                "parameters": {
                    "input": {
                        "key": {
                            "$js": "({bag}) => !!bag?.phone_number"
                        }
                    }
                }
            },
            {
                "id": "SUBMIT-PHONE-NUMBER",
                "name": "Backoffice submit phone_number",
                "next": "SET-PHONE-NUMBER-TO-BAG",
                "type": "UserTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "parameters": {
                    "input": {},
                    "action": "BACKOFFICE_SUBMIT_PHONE_NUMBER",
                    "timeout": 360,
                    "activity_schema": {
                        "type": "object",
                        "properties": {
                            "action": {
                                "type": "string"
                            },
                            "phone_number": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                }
            },
            {
                "id": "SET-PHONE-NUMBER-TO-BAG",
                "name": "Set phone_number to Bag",
                "next": "VALIDATE-PHONE-NUMBER",
                "type": "SystemTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "phone_number": {
                            "$ref": "result.activities[0].data.phone_number"
                        }
                    }
                }
            },
            {
                "id": "VALIDATE-PHONE-NUMBER",
                "name": "Validate IF is a valid PHONE NUMBER",
                "next": "IS-VALID-PHONE-NUMBER",
                "type": "SystemTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "value": {
                            "$ref": "bag.phone_number"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.SERVICE_API}}}/rpc/validate/phone_number"
                        },
                        "verb": "POST",
                        "headers": {
                            "Prefer": "return=representation",
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "IS-VALID-PHONE-NUMBER",
                "name": "Verify if phone_number is a valid format.",
                "next": {
                    "true": "GET-CURRENT-REQUEST-BY-PHONE-NUMBER",
                    "default": "NOTIFY-INVALID-PHONE-NUMBER"
                },
                "type": "Flow",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "result.data.is_valid"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-INVALID-PHONE-NUMBER",
                "name": "Send message notifying invalid phone_number",
                "next": "FINISH-INVALID-PHONE-NUMBER",
                "type": "UserTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "parameters": {
                    "input": {
                        "message": "Número de Telefone Inválido",
                        "toggleModal": true
                    },
                    "action": "NOTIFY_INVALID_PHONE_NUMBER",
                    "timeout": 120
                }
            },
            {
                "id": "FINISH-INVALID-PHONE-NUMBER",
                "name": "Finish invalid phone_number",
                "next": null,
                "type": "Finish",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID"
            },
            {
                "id": "GET-CURRENT-REQUEST-BY-PHONE-NUMBER",
                "name": "Get current_request by phone_number",
                "next": "WAS-CURRENT-REQUEST-FOUND",
                "type": "SystemTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "category": "HTTP",
                "parameters": {
                    "input": {},
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/profiles?mobile_phone=eq.55{{bag.phone_number}}"
                        },
                        "verb": "GET",
                        "headers": {
                            "Prefer": "return=representation",
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "WAS-CURRENT-REQUEST-FOUND",
                "name": "Verify if current_request was found.",
                "next": {
                    "true": "SET-CURRENT-REQUEST-ID-AND-PROFILE-ID-TO-BAG",
                    "default": "CUSTOM-NODE-ABORT-REQUEST-PROCESS-BY-ACTOR"
                },
                "type": "Flow",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "parameters": {
                    "input": {
                        "key": {
                            "$js": "({result}) => !!result?.data[0]?.current_request_id"
                        }
                    }
                }
            },
            {
                "id": "SET-CURRENT-REQUEST-ID-AND-PROFILE-ID-TO-BAG",
                "name": "Set current_request_id and profile_id to bag",
                "next": "UPDATE-RESQUEST-STATUS-TO-CLOSED-BY-CURRENT-REQUEST-ID",
                "type": "SystemTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "actor": {
                            "$ref": "result.data[0].mobile_phone"
                        },
                        "profile_id": {
                            "$ref": "result.data[0].id"
                        },
                        "current_request_id": {
                            "$ref": "result.data[0].current_request_id"
                        }
                    }
                }
            },
            {
                "id": "UPDATE-RESQUEST-STATUS-TO-CLOSED-BY-CURRENT-REQUEST-ID",
                "name": "Update resquest status to CLOSED by current_request_id",
                "next": "UPDATE-CURRENT-REQUEST-ID-TO-NULL-BY-PROFILE-ID",
                "type": "SystemTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": "CLOSED"
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{bag.current_request_id}}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "Prefer": "return=representation",
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-CURRENT-REQUEST-ID-TO-NULL-BY-PROFILE-ID",
                "name": "Update current_request_id to NULL by profile_id",
                "next": "SET-CHAT-TO-INACTIVE-BY-PHONE-NUMBER",
                "type": "SystemTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "current_request_id": null
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/profiles?id=eq.{{bag.profile_id}}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "Prefer": "return=representation",
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "SET-CHAT-TO-INACTIVE-BY-PHONE-NUMBER",
                "name": "Set chat to inactive by phone_number",
                "next": "CUSTOM-NODE-ABORT-REQUEST-PROCESS-BY-ACTOR",
                "type": "SystemTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": "inactive"
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.CHAT_POSTGREST}}}/chat?request_id=eq.{{bag.current_request_id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "Prefer": "return=representation",
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "CUSTOM-NODE-ABORT-REQUEST-PROCESS-BY-ACTOR",
                "name": "Custom node to abort request process by actor",
                "next": "VERIFY-CLIENT-RESET",
                "type": "SystemTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "category": "AbortRequestProcessTask",
                "parameters": {
                    "input": {
                        "actor": {
                            "$mustache": "55{{bag.phone_number}}"
                        },
                        "actor_data": {
                            "$ref": "actor_data"
                        }
                    }
                }
            },
            {
                "id": "VERIFY-CLIENT-RESET",
                "name": "Verify if client reset successfully",
                "next": {
                    "SUCESS": "NOTIFY-CLIENT-RESET-SUCCESSFULLY",
                    "default": "NOTIFY-RESET-CLIENT-FAIL"
                },
                "type": "Flow",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "result.status"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-CLIENT-RESET-SUCCESSFULLY",
                "name": "Send message notifying reset client successfully",
                "next": "FINISH-CLIENT-RESET-SUCCESSFULLY",
                "type": "UserTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "parameters": {
                    "input": {
                        "message": "Cliente resetado com sucesso",
                        "toggleModal": true
                    },
                    "action": "NOTIFY_CLIENT_RESET_SUCCESSFULLY",
                    "timeout": 120
                }
            },
            {
                "id": "FINISH-CLIENT-RESET-SUCCESSFULLY",
                "name": "Finish client reset successfully",
                "next": null,
                "type": "Finish",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID"
            },
            {
                "id": "NOTIFY-RESET-CLIENT-FAIL",
                "name": "Send message notifying reset client fail",
                "next": "FINISH-RESET-CLIENT-FAIL",
                "type": "UserTask",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID",
                "parameters": {
                    "input": {
                        "message": "Falha ao resetar o cliente",
                        "toggleModal": true
                    },
                    "action": "NOTIFY_RESET_CLIENT_FAIL",
                    "timeout": 120
                }
            },
            {
                "id": "FINISH-RESET-CLIENT-FAIL",
                "name": "Finish reset client fail",
                "next": null,
                "type": "Finish",
                "lane_id": "RESET_CLIENT_BACKOFFICE_ID"
            }
        ],
        "prepare": [],
        "environment": {
            "JWT_KEY": "JWT_KEY_BP",
            "CHAT_API": "CHAT_API",
            "POSTGREST": "POSTGREST",
            "SERVICE_API": "SERVICE_API",
            "CHAT_POSTGREST": "CHAT_POSTGREST"
        },
        "requirements": [
            "core"
        ]
    }
}