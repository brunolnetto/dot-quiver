{
    "name": "request_review",
    "description": "fluxo para revisar um profile",
    "blueprint_spec": {
        "lanes": [
            {
                "id": "ANYONE",
                "name": "Anyone",
                "rule": [
                    "fn",
                    [
                        "&",
                        "args"
                    ],
                    true
                ]
            },
            {
                "id": "REVIEWER-LATCHED",
                "name": "selected reviewer",
                "rule": {
                    "$js": "({actor_data, bag}) => bag.reviewer_id === actor_data.actor_id"
                }
            },
            {
                "id": "BACKOFFICE-LATCHED",
                "name": "any backoffice user latched",
                "rule": {
                    "$js": "({actor_data, bag}) => actor_data.claims.includes('adminRequests')"
                }
            },
            {
                "id": "REQUESTBOT",
                "name": "Buyer",
                "rule": {
                    "$js": "({actor_data}) => actor_data.claims.includes('requestBot')"
                }
            }
        ],
        "nodes": [
            {
                "id": "0",
                "name": "Start Request Review",
                "next": "BUYER-BAG",
                "type": "Start",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input_schema": {
                        "type": "object",
                        "required": [
                            "party_number",
                            "chat_id",
                            "profiles",
                            "request"
                        ],
                        "properties": {
                            "chat_id": {
                                "type": "string"
                            },
                            "request": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "status:": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    }
                                }
                            },
                            "profiles": {
                                "type": "object",
                                "required": [
                                    "main"
                                ],
                                "properties": {
                                    "main": {
                                        "type": "object"
                                    },
                                    "second": {
                                        "type": "object"
                                    }
                                }
                            },
                            "party_number": {
                                "type": "string"
                            },
                            "realtor_number": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            {
                "id": "BUYER-BAG",
                "name": "set reviewer to bag",
                "next": "PICK-FOR-REVIEW",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "buyer": {
                            "$ref": "actor_data"
                        },
                        "BASE_URL": "aprova_services:3000"
                    }
                }
            },
            {
                "id": "PICK-FOR-REVIEW",
                "name": "Pick profile for review",
                "next": "REVIEWER-BAG",
                "type": "UserTask",
                "lane_id": "BACKOFFICE-LATCHED",
                "parameters": {
                    "input": {
                        "request": {
                            "$ref": "bag.request"
                        },
                        "actor_id": {
                            "$ref": "actor_data.actor_id"
                        },
                        "profiles": {
                            "$ref": "bag.profiles"
                        },
                        "card_data": {
                            "date": {
                                "$ref": "bag.request.created_at"
                            },
                            "name": {
                                "$ref": "bag.profiles.main.name.value"
                            },
                            "phone": {
                                "$ref": "bag.party_number"
                            }
                        }
                    },
                    "action": "PICK_FOR_REVIEW"
                }
            },
            {
                "id": "REVIEWER-BAG",
                "name": "set reviewer to bag",
                "next": "UPDATE-REQUEST-STATUS-AWAITING-ANALYSIS-ON-DB",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "reviewer_id": {
                            "$ref": "actor_data.actor_id"
                        }
                    }
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-AWAITING-ANALYSIS-ON-DB",
                "name": "Update request status to awaiting analysis on database",
                "next": "UPDATE-REQUEST-STATUS-AWAITING-ANALYSIS-TO-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": "AWAITING_ANALYSIS"
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-AWAITING-ANALYSIS-TO-BAG",
                "name": "update request status to awaiting analysis to bag",
                "next": "NOTIFY-STATUS-HAS-CHANGED-TO-AW-ANALYSIS",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "request": {
                            "$js": "({bag}) => { return { ...bag.request, status: 'AWAITING_ANALYSIS' }}"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-STATUS-HAS-CHANGED-TO-AW-ANALYSIS",
                "name": "Notify status to realtor",
                "next": "CEF-INPUT-SETTINGS",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "startProcess",
                "parameters": {
                    "input": {
                        "status": "AGUARDANDO AN√ÅLISE",
                        "request": {
                            "$ref": "bag.request"
                        },
                        "author_id": {
                            "$ref": "bag.author_id"
                        },
                        "buyer_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "notifyMessage"
                }
            },
            {
                "id": "CEF-INPUT-SETTINGS",
                "name": "Fetch settings for cef input",
                "next": "CEF-INPUT-SETTINGS-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {},
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/dev_contracts?key=eq.request_review_CEF_SETTINGS"
                        },
                        "verb": "GET",
                        "headers": {
                            "Prefer": "return=representation",
                            "ContentType": "application/json"
                        },
                        "max_content_length": 10000
                    },
                    "valid_response_codes": [
                        200,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "CEF-INPUT-SETTINGS-BAG",
                "name": "bag cef response",
                "next": "PROFILE-REVIEW-SETTINGS",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "cefSettings": {
                            "$ref": "result.data[0].value"
                        }
                    }
                }
            },
            {
                "id": "PROFILE-REVIEW-SETTINGS",
                "name": "Fetch settings for profile review",
                "next": "PROFILE-REVIEW-BUILD",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "HTTP",
                "parameters": {
                    "input": {},
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/dev_contracts?key=eq.request_review_ACTION_SUBMIT_PROFILE_REVIEW"
                        },
                        "verb": "GET",
                        "headers": {
                            "Prefer": "return=representation",
                            "ContentType": "application/json"
                        },
                        "max_content_length": 100000
                    },
                    "valid_response_codes": [
                        200,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "PROFILE-REVIEW-BUILD",
                "name": "Build profile review data",
                "next": "PROFILE-REVIEW",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "profileReview": {
                            "profiles": {
                                "main": {
                                    "$js": "({ bag }) => { const title = { name: bag.profiles.main.name.value, email: bag.profiles.main.email.value, phone: bag.party_number }; return { ...bag.profiles.main, title }; };"
                                },
                                "second": {
                                    "$js": "({ bag }) => { const title = { name: bag.profiles.second?.name?.value, email: bag.profiles.second?.email?.value }; return { ...bag.profiles.second, title }; };"
                                }
                            },
                            "ui_schema": {
                                "$ref": "result.data[0].value.ui_schema"
                            },
                            "activity_schema": {
                                "type": {
                                    "$ref": "result.data[0].value.activity_schema.type"
                                },
                                "properties": {
                                    "main": {
                                        "$js": "({bag, result}) => { const schema = result.data[0].value.activity_schema.properties.main.properties; const profileKeys = Object.keys(bag.profiles.main); const schemaKeys = Object.keys(result.data[0].value.activity_schema.properties.main.properties); const filteredSchema = schemaKeys.filter(key => profileKeys.includes(key)).reduce((acc, key) => { acc[key] = schema[key]; return acc; }, { title: schema['title'], additional_documents: schema['additional_documents'] }); return { type: 'object', title: '', properties: filteredSchema }; }"
                                    },
                                    "second": {
                                        "$js": "({ bag, result }) => { const profileKeys = Object.keys(bag.profiles.second); if(profileKeys.length === 0) { return undefined }; const schema = result.data[0].value.activity_schema.properties.second.properties; const schemaKeys = Object.keys(result.data[0].value.activity_schema.properties.second.properties); const filteredSchema = schemaKeys.filter((key) => profileKeys.includes(key)).reduce((acc, key) => { acc[key] = schema[key]; return acc; }, { title: schema['title'], additional_documents: schema['additional_documents'] }); return { type: 'object', title: '', properties: filteredSchema }; };"
                                    },
                                    "status": {
                                        "$ref": "result.data[0].value.activity_schema.properties.status"
                                    },
                                    "description": {
                                        "$ref": "result.data[0].value.activity_schema.properties.description"
                                    }
                                },
                                "definitions": {
                                    "$ref": "result.data[0].value.activity_schema.definitions"
                                }
                            }
                        }
                    }
                }
            },
            {
                "id": "PROFILE-REVIEW",
                "name": "Desk review",
                "next": "PROFILE-REVIEW-BAG",
                "type": "UserTask",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "request": {
                            "$ref": "bag.request"
                        },
                        "profiles": {
                            "$ref": "bag.profileReview.profiles"
                        },
                        "card_data": {
                            "date": {
                                "$ref": "bag.request.created_at"
                            },
                            "name": {
                                "$ref": "bag.profileReview.profiles.main.name.value"
                            },
                            "phone": {
                                "$ref": "bag.party_number"
                            }
                        },
                        "ui_schema": {
                            "$ref": "bag.profileReview.ui_schema"
                        },
                        "observations": {
                            "$js": "({bag}) => !!bag.observations ? bag.observations : []"
                        },
                        "activity_schema": {
                            "$ref": "bag.profileReview.activity_schema"
                        }
                    },
                    "action": "SUBMIT_PROFILE_REVIEW"
                }
            },
            {
                "id": "PROFILE-REVIEW-BAG",
                "name": "set reviewer to bag",
                "next": "REVIEW-STATUS",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "falses": {
                            "$js": "({ result }) => { const profiles = result.activities[0].data.profiles; const keys = Object.keys(profiles.main).filter(i => i !== 'choose_second_buyer'); const falses = keys.reduce((acc, key) => { const main = profiles.main[key] && !profiles.main[key].valid && profiles.main[key].value ? 1 : 0; const second = profiles.second[key] && !profiles.second[key].valid && profiles.second[key].value ? 1 : 0; return acc + main + second; }, 0); return falses };"
                        },
                        "profiles": {
                            "$ref": "result.activities[0].data.profiles"
                        },
                        "observations": {
                            "$js": "({bag, result}) => !!bag.observations ? ([...bag.observations, { status: result.activities[0].data.status, obs: result.activities[0].data.obs }]) : ([{ status: result.activities[0].data.status, obs: result.activities[0].data.obs }])"
                        },
                        "profiles_review_status": {
                            "$ref": "result.activities[0].data.status"
                        }
                    }
                }
            },
            {
                "id": "REVIEW-STATUS",
                "name": "Review status",
                "next": {
                    "REJECT": "REJEITADO-NOTIFY",
                    "SUCCESS": "UPDATE-STATUS-REQUEST-PROFILE-REVIEW-ON-DB",
                    "default": "ADDITIONAL_DOCS-BAG",
                    "RESTRICTION": "UPDATE-REQUEST-STATUS-RESTRICTION-ON-DB"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "bag.profiles_review_status"
                        }
                    }
                }
            },
            {
                "id": "UPDATE-STATUS-REQUEST-PROFILE-REVIEW-ON-DB",
                "name": "Update request after profile review",
                "next": "REVIEW-FALSES",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "description": {
                            "$ref": "bag.observations"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "REVIEW-FALSES",
                "name": "Review status",
                "next": {
                    "0": "REQUEST-DETAILS-SETTINGS",
                    "default": "NOTIFY-FALSES"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "bag.falses"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-FALSES",
                "name": "notify reviewer of invalid fields",
                "next": "PROFILE-REVIEW-SETTINGS",
                "type": "UserTask",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "activity_schema": {
                            "title": "Erro na Revis√£o do Profile",
                            "properties": {},
                            "description": {
                                "$mustache": "H√° {{bag.falses}} campos n√£o aprovados no perfil enviado"
                            }
                        }
                    },
                    "action": "NOTIFY_FALSES",
                    "timeout": 60
                }
            },
            {
                "id": "REQUEST-DETAILS-SETTINGS",
                "name": "Fetch settings for CEF hiding status of client profile review and readonly fields",
                "next": "CEF-INPUT",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "HTTP",
                "parameters": {
                    "input": {},
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/dev_contracts?key=eq.request_details"
                        },
                        "verb": "GET",
                        "headers": {
                            "Prefer": "return=representation",
                            "ContentType": "application/json"
                        },
                        "max_content_length": 100000
                    },
                    "valid_response_codes": [
                        200,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "CEF-INPUT",
                "name": "Contact CEF and fulfill its response",
                "next": "CEF-BAG",
                "type": "UserTask",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "request": {
                            "$ref": "bag.request"
                        },
                        "card_data": {
                            "date": {
                                "$ref": "bag.request.created_at"
                            },
                            "name": {
                                "$ref": "bag.profileReview.profiles.main.name.value"
                            },
                            "phone": {
                                "$ref": "bag.party_number"
                            }
                        },
                        "observations": {
                            "$js": "({bag}) => !!bag.observations ? bag.observations : []"
                        },
                        "profile_data": {
                            "request": {
                                "$ref": "bag.request"
                            },
                            "profiles": {
                                "$ref": "bag.profileReview.profiles"
                            },
                            "ui_schema": {
                                "$ref": "result.data[0].value.ui_schema"
                            },
                            "activity_schema": {
                                "$ref": "result.data[0].value.activity_schema"
                            }
                        },
                        "activity_schema": {
                            "$ref": "bag.cefSettings['CEF_INPUT'].schema"
                        }
                    },
                    "action": "CEF_INPUT"
                }
            },
            {
                "id": "CEF-BAG",
                "name": "bag cef response",
                "next": "CEF-NOTIFY",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "cefFormData": {
                            "$ref": "result.activities[0].data"
                        },
                        "observations": {
                            "$js": "({bag, result}) => !!bag.observations ? ([...bag.observations, { status: result.activities[0].data.status, obs: result.activities[0].data.obs }]) : ([{ status: result.activities[0].data.status, obs: result.activities[0].data.obs }])"
                        }
                    }
                }
            },
            {
                "id": "CEF-NOTIFY",
                "name": "Notify rejected request",
                "next": "CEF-STATUS",
                "type": "UserTask",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input": {
                        "chat_id": {
                            "$ref": "bag.chat_id"
                        },
                        "messages": {
                            "$js": "({bag}) => bag.cefSettings[bag.cefFormData.status].messages"
                        },
                        "party_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "action": "NOTIFY_MESSAGE",
                    "timeout": 1
                }
            },
            {
                "id": "CEF-STATUS",
                "name": "cef status",
                "next": {
                    "ERROR": "UPDATE-REQUEST-STATUS-ERRO-ON-DB",
                    "default": "PROFILE-REVIEW",
                    "APPROVED": "CREATE-NEGOTIATION-CHAT",
                    "REPROVED": "UPDATE-REQUEST-STATUS-REPROVED-ON-DB",
                    "CANCELLED": "UPDATE-REQUEST-STATUS-AWAITING-CANCELLATION-ON-DB",
                    "WAITING_QV": "UPDATE-REQUEST-STATUS-AWAITING-QV-ON-DB",
                    "CONDITIONED": "CREATE-NEGOTIATION-CHAT",
                    "DIFFERENTIATED": "UPDATE-REQUEST-STATUS-DIFFERENTIATED-ON-DB"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "bag.cefFormData.status"
                        }
                    }
                }
            },
            {
                "id": "CREATE-NEGOTIATION-CHAT",
                "name": "Create negotiation chat",
                "next": "SET-NEGOTIATION-CHAT-AS-MAIN-CHAT",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "origin": "WORKFLOW",
                        "request_id": {
                            "$ref": "bag.request.id"
                        },
                        "buyer_phone_number": {
                            "$ref": "bag.party_number"
                        },
                        "realtor_phone_number": {
                            "$ref": "bag.realtor_number"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.CHAT_API}}}/rpc/chat/create-negotiation-chat"
                        },
                        "verb": "POST",
                        "headers": {
                            "ContentType": "application/json",
                            "Authorization": {
                                "$mustache": "Bearer {{{environment.JWT_KEY}}}"
                            }
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "SET-NEGOTIATION-CHAT-AS-MAIN-CHAT",
                "name": "Set new chat id on bag",
                "next": "SET-UNIQUE-ACTIVE-NEGOTIATION-CHAT",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "chat_id": {
                            "$ref": "result.data.chat_id"
                        }
                    }
                }
            },
            {
                "id": "SET-UNIQUE-ACTIVE-NEGOTIATION-CHAT",
                "name": "Set unique active negotiation chat",
                "next": "LAUDO-FORM",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "chat_id": {
                            "$ref": "bag.chat_id"
                        },
                        "request_id": {
                            "$ref": "bag.request.id"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.CHAT_API}}}/rpc/chat/set-unique-active-negotiation-chat-on-request"
                        },
                        "verb": "POST",
                        "headers": {
                            "ContentType": "application/json",
                            "Authorization": {
                                "$mustache": "Bearer {{{environment.JWT_KEY}}}"
                            }
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-AWAITING-CANCELLATION-ON-DB",
                "name": "Update request status to AWAITING CANCELLATION on database",
                "next": "UPDATE-REQUEST-STATUS-AWAITING-CANCELLATION-TO-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": "AWAITING_CANCELLATION",
                        "description": {
                            "$ref": "bag.observations"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-AWAITING-CANCELLATION-TO-BAG",
                "name": "update request status to awaiting cancellation to bag",
                "next": "NOTIFY-STATUS-HAS-CHANGED-TO-AW-CANCELLATION",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "request": {
                            "$js": "({bag}) => { return { ...bag.request, status: 'AWAITING_CANCELLATION' }}"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-STATUS-HAS-CHANGED-TO-AW-CANCELLATION",
                "name": "Notify status to realtor",
                "next": "PROFILE-TYPE-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "startProcess",
                "parameters": {
                    "input": {
                        "status": "AGUARDANDO CANCELAMENTO",
                        "request": {
                            "$ref": "bag.request"
                        },
                        "author_id": {
                            "$ref": "bag.author_id"
                        },
                        "buyer_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "notifyMessage"
                }
            },
            {
                "id": "PROFILE-TYPE-BAG",
                "name": "Set profiles type to bag",
                "next": "CANCELAMENTO-GETINFO",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "profile_type": "main"
                    }
                }
            },
            {
                "id": "CANCELAMENTO-GETINFO",
                "name": "getInfo carta cancelamento",
                "next": "CANCELAMENTO-RESPONSE",
                "type": "SubProcess",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input": {
                        "key": "cancellation_letter",
                        "chat_id": {
                            "$ref": "bag.chat_id"
                        },
                        "profile": {
                            "$ref": "bag.profileReview.profiles"
                        },
                        "mobile_phone": {
                            "$ref": "bag.party_number"
                        },
                        "profile_type": {
                            "$ref": "bag.profile_type"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "getInfo",
                    "valid_response": "finished"
                }
            },
            {
                "id": "CANCELAMENTO-RESPONSE",
                "name": "Verify getInfo response",
                "next": {
                    "SUCCESS": "CANCELAMENTO-RESPONSE-BAG",
                    "default": "CLOSE-INACTIVE",
                    "FAIL-QUIT": "CLOSE-QUIT",
                    "FAIL-TIMEOUT": "CLOSE-INACTIVE",
                    "SUCCESS-NOOP": "CANCELAMENTO-RESPONSE-BAG"
                },
                "type": "Flow",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "result.data.status"
                        }
                    }
                }
            },
            {
                "id": "CANCELAMENTO-RESPONSE-BAG",
                "name": "Set task settings to bag",
                "next": "CANCELAMENTO",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "profiles": {
                            "$ref": "result.data.profiles"
                        }
                    }
                }
            },
            {
                "id": "CANCELAMENTO",
                "name": "review CANCELAMENTO",
                "next": "CANCEL-STATUS",
                "type": "UserTask",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "request": {
                            "$ref": "bag.request"
                        },
                        "card_data": {
                            "date": {
                                "$ref": "bag.request.created_at"
                            },
                            "name": {
                                "$ref": "bag.profileReview.profiles.main.name.value"
                            },
                            "phone": {
                                "$ref": "bag.party_number"
                            }
                        },
                        "observations": {
                            "$js": "({bag}) => !!bag.observations ? bag.observations : []"
                        },
                        "profile_data": {
                            "request": {
                                "$ref": "bag.request"
                            },
                            "profiles": {
                                "$ref": "bag.profileReview.profiles"
                            },
                            "ui_schema": {
                                "$ref": "bag.profileReview.ui_schema"
                            },
                            "activity_schema": {
                                "$js": "({bag}) => {const r = bag.profileReview.activity_schema; delete r['definitions']; delete r['status']; return r;}"
                            }
                        },
                        "activity_schema": {
                            "$ref": "bag.cefSettings['CANCELLED'].schema"
                        }
                    },
                    "action": "CANCELAMENTO_FORM"
                }
            },
            {
                "id": "CANCEL-STATUS",
                "name": "Verify status",
                "next": {
                    "SOLVED": "PROFILE-REVIEW",
                    "default": "CANCELAMENTO",
                    "NEW_CANCEL_LETTER": "CANCELAMENTO-GETINFO"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "result.activities[0].data.status"
                        }
                    }
                }
            },
            {
                "id": "CANCEL-TIMER",
                "name": "Timer CANCELAMENTO FORM",
                "next": "CANCELAMENTO",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "timer",
                "parameters": {
                    "input": {},
                    "timeout": 10800
                }
            },
            {
                "id": "LAUDO-FORM",
                "name": "review LAUDO",
                "next": "SET-CREDIT-LIMIT-TO-BAG",
                "type": "UserTask",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "request": {
                            "$ref": "bag.request"
                        },
                        "card_data": {
                            "date": {
                                "$ref": "bag.request.created_at"
                            },
                            "name": {
                                "$ref": "bag.profileReview.profiles.main.name.value"
                            },
                            "phone": {
                                "$ref": "bag.party_number"
                            }
                        },
                        "ui_schema": {
                            "$ref": "bag.cefSettings['APPROVED'].ui_schema"
                        },
                        "observations": {
                            "$js": "({bag}) => !!bag.observations ? bag.observations : []"
                        },
                        "profile_data": {
                            "request": {
                                "$ref": "bag.request"
                            },
                            "profiles": {
                                "$ref": "bag.profileReview.profiles"
                            },
                            "ui_schema": {
                                "$ref": "bag.profileReview.ui_schema"
                            },
                            "activity_schema": {
                                "$js": "({bag}) => {const r = bag.profileReview.activity_schema; delete r['definitions']; delete r['status']; return r;}"
                            }
                        },
                        "activity_schema": {
                            "$ref": "bag.cefSettings['APPROVED'].schema"
                        }
                    },
                    "action": "LAUDO_FORM"
                }
            },
            {
                "id": "SET-CREDIT-LIMIT-TO-BAG",
                "name": "Set credit limit to bag",
                "next": "LAUDO-CREATE",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "request": {
                            "$js": "({bag, result}) => ({ ...bag.request, credit_limit: result.activities[0].data.analysis_value})"
                        }
                    }
                }
            },
            {
                "id": "LAUDO-CREATE",
                "name": "criar laudo",
                "next": "VERIFY-LAUDO-RESPONSE-CODE",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "http",
                "parameters": {
                    "input": {
                        "client": {
                            "$js": "({bag, result}) => ({ ...result.activities[0].data, request_id: bag.request.id })"
                        },
                        "template": {
                            "siric": "G30",
                            "table": "G35",
                            "title": "D3",
                            "analyst": "F43",
                            "indexer": "O40",
                            "category": "G34",
                            "feedback": "M39",
                            "protocol": "R20",
                            "bank_name": "N13",
                            "client_CPF": "E14",
                            "client_FGTS": "E15",
                            "client_name": "E13",
                            "pending_one": "B47",
                            "pending_six": "B52",
                            "pending_two": "B48",
                            "bank_account": "R19",
                            "client_quota": "I15",
                            "feedback_two": "O43",
                            "pending_five": "B51",
                            "pending_four": "B50",
                            "total_income": "G29",
                            "approval_date": "D38",
                            "client_income": "J13",
                            "client_status": "N16",
                            "income_report": "G32",
                            "interest_rate": "R38",
                            "pending_eight": "B54",
                            "pending_seven": "B53",
                            "pending_three": "B49",
                            "analysis_value": "O34",
                            "has_dependents": "G33",
                            "financing_quota": "R36",
                            "analysis_subsidy": "O32",
                            "evaluation_value": "M36",
                            "third_client_CPF": "E29",
                            "analysis_deadline": "O29",
                            "client_birth_date": "I14",
                            "commitment_income": "G31",
                            "second_client_CPF": "E17",
                            "third_client_FGTS": "E21",
                            "third_client_name": "E19",
                            "analysis_financing": "O33",
                            "buy_and_sell_value": "M38",
                            "project_properties": "B24",
                            "second_client_FGTS": "E18",
                            "second_client_name": "E16",
                            "third_client_quota": "I21",
                            "analysis_total_FGTS": "O31",
                            "client_civil_status": "R17",
                            "second_client_quota": "I18",
                            "third_client_income": "J19",
                            "second_client_income": "J16",
                            "analysis_first_payment": "O30",
                            "third_client_birth_date": "I20",
                            "approval_expiration_date": "D40",
                            "second_client_birth_date": "I17"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.SERVICE_API}}}/rpc/credit_analysis_form"
                        },
                        "verb": "POST",
                        "headers": {
                            "ContentType": "application/json"
                        },
                        "max_content_length": 50000
                    },
                    "valid_response_codes": [
                        200,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "VERIFY-LAUDO-RESPONSE-CODE",
                "name": "laudo status",
                "next": {
                    "400": "NOTIFY-LAUDO-RESPONSE-STATUS",
                    "default": "SET-LAUDO-TO-BAG"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "result.status"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-LAUDO-RESPONSE-STATUS",
                "name": "Notify laudo status",
                "next": "LAUDO-FORM",
                "type": "UserTask",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input": {
                        "messages": [
                            {
                                "message": "Laudo Inv√°lido!"
                            }
                        ]
                    },
                    "action": "NOTIFY_MESSAGE",
                    "timeout": 1
                }
            },
            {
                "id": "SET-LAUDO-TO-BAG",
                "name": "Set laudo to bag",
                "next": "LAUDO-SHOW",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "laudo_id": {
                            "$ref": "result.data.id"
                        },
                        "profiles": {
                            "main": {
                                "$js": "({bag, result}) => ({ ...bag.profiles.main, laudo: { value: result.data.id, valid: true }})"
                            },
                            "second": {
                                "$js": "({bag, result}) => ({ ...bag.profiles.second })"
                            }
                        },
                        "laudo_storage_path": {
                            "$ref": "result.data.storage_path"
                        }
                    }
                }
            },
            {
                "id": "LAUDO-SHOW",
                "name": "review DIFERENCIADO",
                "next": "VERIFY-LAUDO-STATUS",
                "type": "UserTask",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "request": {
                            "$ref": "bag.request"
                        },
                        "laudo_id": {
                            "$ref": "bag.profiles.main.laudo_id"
                        },
                        "card_data": {
                            "date": {
                                "$ref": "bag.request.created_at"
                            },
                            "name": {
                                "$ref": "bag.profileReview.profiles.main.name.value"
                            },
                            "phone": {
                                "$ref": "bag.party_number"
                            }
                        },
                        "observations": {
                            "$js": "({bag}) => !!bag.observations ? bag.observations : []"
                        },
                        "profile_data": {
                            "request": {
                                "$ref": "bag.request"
                            },
                            "profiles": {
                                "$ref": "bag.profiles"
                            },
                            "ui_schema": {
                                "$ref": "bag.profileReview.ui_schema"
                            },
                            "activity_schema": {
                                "$js": "({bag}) => {const r = bag.profileReview.activity_schema; delete r['definitions']; delete r['status']; return r;}"
                            }
                        },
                        "laudo_storage_path": {
                            "$ref": "bag.laudo_storage_path"
                        }
                    },
                    "action": "LAUDO_SHOW"
                }
            },
            {
                "id": "VERIFY-LAUDO-STATUS",
                "name": "laudo status",
                "next": {
                    "default": "LAUDO-FORM",
                    "APPROVED": "UPDATE-REQUEST"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "result.activities[0].data.status"
                        }
                    }
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-DIFFERENTIATED-ON-DB",
                "name": "Update request status to differentiated on database",
                "next": "UPDATE-REQUEST-STATUS-DIFFERENTIATED-TO-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": "DIFFERENTIATED",
                        "description": {
                            "$ref": "bag.observations"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-DIFFERENTIATED-TO-BAG",
                "name": "update request status to differentiated to bag",
                "next": "NOTIFY-STATUS-HAS-CHANGED-TO-DIFF",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "request": {
                            "$js": "({bag}) => { return { ...bag.request, status: 'DIFFERENTIATED' }}"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-STATUS-HAS-CHANGED-TO-DIFF",
                "name": "Notify status to realtor",
                "next": "DIFERENCIADO",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "startProcess",
                "parameters": {
                    "input": {
                        "status": "DIFERENCIADO",
                        "request": {
                            "$ref": "bag.request"
                        },
                        "author_id": {
                            "$ref": "bag.author_id"
                        },
                        "buyer_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "notifyMessage"
                }
            },
            {
                "id": "DIFERENCIADO",
                "name": "review DIFERENCIADO",
                "next": "SET-DIFERENCIADO-OBS-TO-BAG",
                "type": "UserTask",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "request": {
                            "$ref": "bag.request"
                        },
                        "card_data": {
                            "date": {
                                "$ref": "bag.request.created_at"
                            },
                            "name": {
                                "$ref": "bag.profileReview.profiles.main.name.value"
                            },
                            "phone": {
                                "$ref": "bag.party_number"
                            }
                        },
                        "observations": {
                            "$js": "({bag}) => !!bag.observations ? bag.observations : []"
                        },
                        "profile_data": {
                            "profiles": {
                                "$ref": "bag.profileReview.profiles"
                            },
                            "ui_schema": {
                                "$ref": "bag.profileReview.ui_schema"
                            },
                            "activity_schema": {
                                "$js": "({bag}) => {const r = bag.profileReview.activity_schema; delete r['definitions']; delete r['status']; return r;}"
                            }
                        },
                        "activity_schema": {
                            "$ref": "bag.cefSettings['DIFFERENTIATED'].schema"
                        }
                    },
                    "action": "DIFERENCIADO_FORM"
                }
            },
            {
                "id": "SET-DIFERENCIADO-OBS-TO-BAG",
                "name": "Set diferenciado obs to bag",
                "next": "DIF-STATUS",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "difStatus": {
                            "$ref": "result.activities[0].data.status"
                        },
                        "observations": {
                            "$js": "({bag, result}) => !!bag.observations ? ([...bag.observations, { status: result.activities[0].data.status, obs: result.activities[0].data.obs }]) : ([{ status: result.activities[0].data.status, obs: result.activities[0].data.obs }])"
                        }
                    }
                }
            },
            {
                "id": "DIF-STATUS",
                "name": "Verify status",
                "next": {
                    "SOLVED": "PROFILE-REVIEW",
                    "default": "DIFERENCIADO"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "bag.difStatus"
                        }
                    }
                }
            },
            {
                "id": "DIF-TIMER",
                "name": "Timer DIFERENCIADO FORM",
                "next": "DIFERENCIADO",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "timer",
                "parameters": {
                    "input": {},
                    "timeout": 10800
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-RESTRICTION-ON-DB",
                "name": "Update request status to restriction on database",
                "next": "UPDATE-REQUEST-STATUS-RESTRICTION-TO-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": "RESTRICTION",
                        "description": {
                            "$ref": "bag.observations"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-RESTRICTION-TO-BAG",
                "name": "update request status to RESTRICTION to bag",
                "next": "NOTIFY-STATUS-HAS-CHANGED-TO-RESTRICTION",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "request": {
                            "$js": "({bag}) => { return { ...bag.request, status: 'RESTRICTION' }}"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-STATUS-HAS-CHANGED-TO-RESTRICTION",
                "name": "Notify status to realtor",
                "next": "RESTRICTION",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "startProcess",
                "parameters": {
                    "input": {
                        "status": "RESTRI√á√ÉO",
                        "request": {
                            "$ref": "bag.request"
                        },
                        "author_id": {
                            "$ref": "bag.author_id"
                        },
                        "buyer_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "notifyMessage"
                }
            },
            {
                "id": "RESTRICTION",
                "name": "review RESTRICAO",
                "next": "SET-RESTRICTION-OBS-TO-BAG",
                "type": "UserTask",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "request": {
                            "$ref": "bag.request"
                        },
                        "card_data": {
                            "date": {
                                "$ref": "bag.request.created_at"
                            },
                            "name": {
                                "$ref": "bag.profileReview.profiles.main.name.value"
                            },
                            "phone": {
                                "$ref": "bag.party_number"
                            }
                        },
                        "observations": {
                            "$js": "({bag}) => !!bag.observations ? bag.observations : []"
                        },
                        "profile_data": {
                            "profiles": {
                                "$ref": "bag.profileReview.profiles"
                            },
                            "ui_schema": {
                                "$ref": "bag.profileReview.ui_schema"
                            },
                            "activity_schema": {
                                "$js": "({bag}) => {const r = bag.profileReview.activity_schema; delete r['definitions']; delete r['status']; return r;}"
                            }
                        },
                        "activity_schema": {
                            "$ref": "bag.cefSettings['RESTRICTION'].schema"
                        }
                    },
                    "action": "RESTRICTION_FORM"
                }
            },
            {
                "id": "SET-RESTRICTION-OBS-TO-BAG",
                "name": "Set restriction obs to bag",
                "next": "RESTRICTION-STATUS",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "resStatus": {
                            "$ref": "result.activities[0].data.status"
                        },
                        "observations": {
                            "$js": "({bag, result}) => !!bag.observations ? ([...bag.observations, { status: result.activities[0].data.status, obs: result.activities[0].data.obs }]) : ([{ status: result.activities[0].data.status, obs: result.activities[0].data.obs }])"
                        }
                    }
                }
            },
            {
                "id": "RESTRICTION-STATUS",
                "name": "Verify status",
                "next": {
                    "SOLVED": "PROFILE-REVIEW",
                    "default": "RESTRICTION"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "bag.resStatus"
                        }
                    }
                }
            },
            {
                "id": "RESTRICTION-TIMER",
                "name": "Timer RESTRICTION FORM",
                "next": "RESTRICTION",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "timer",
                "parameters": {
                    "input": {},
                    "timeout": 10800
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-AWAITING-QV-ON-DB",
                "name": "Update request status to awaiting qv on database",
                "next": "UPDATE-REQUEST-STATUS-AWAITING-QV-TO-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": "AWAITING_QV",
                        "description": {
                            "$ref": "bag.observations"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-AWAITING-QV-TO-BAG",
                "name": "update request status to awaiting qv to bag",
                "next": "NOTIFY-STATUS-HAS-CHANGED-TO-AW-QV",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "request": {
                            "$js": "({bag}) => { return { ...bag.request, status: 'AWAITING_QV' }}"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-STATUS-HAS-CHANGED-TO-AW-QV",
                "name": "Notify status to realtor",
                "next": "AGUARDANDO_QV",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "startProcess",
                "parameters": {
                    "input": {
                        "status": "AGUARDANDO Q.V",
                        "request": {
                            "$ref": "bag.request"
                        },
                        "author_id": {
                            "$ref": "bag.author_id"
                        },
                        "buyer_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "notifyMessage"
                }
            },
            {
                "id": "AGUARDANDO_QV",
                "name": "review AGUARDANDO_QV",
                "next": "SET-AGUARD-QV-OBS-TO-BAG",
                "type": "UserTask",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "request": {
                            "$ref": "bag.request"
                        },
                        "card_data": {
                            "date": {
                                "$ref": "bag.request.created_at"
                            },
                            "name": {
                                "$ref": "bag.profileReview.profiles.main.name.value"
                            },
                            "phone": {
                                "$ref": "bag.party_number"
                            }
                        },
                        "observations": {
                            "$js": "({bag}) => !!bag.observations ? bag.observations : []"
                        },
                        "profile_data": {
                            "profiles": {
                                "$ref": "bag.profileReview.profiles"
                            },
                            "ui_schema": {
                                "$ref": "bag.profileReview.ui_schema"
                            },
                            "activity_schema": {
                                "$js": "({bag}) => {const r = bag.profileReview.activity_schema; delete r['definitions']; delete r['status']; return r;}"
                            }
                        },
                        "activity_schema": {
                            "$ref": "bag.cefSettings['WAITING_QV'].schema"
                        }
                    },
                    "action": "AGUARDANDO_QV_FORM"
                }
            },
            {
                "id": "SET-AGUARD-QV-OBS-TO-BAG",
                "name": "Set aguardando qv obs to bag",
                "next": "QV-STATUS",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "qvStatus": {
                            "$ref": "result.activities[0].data.status"
                        },
                        "observations": {
                            "$js": "({bag, result}) => !!bag.observations ? ([...bag.observations, { status: result.activities[0].data.status, obs: result.activities[0].data.obs }]) : ([{ status: result.activities[0].data.status, obs: result.activities[0].data.obs }])"
                        }
                    }
                }
            },
            {
                "id": "QV-STATUS",
                "name": "Verify status",
                "next": {
                    "SOLVED": "PROFILE-REVIEW",
                    "default": "AGUARDANDO_QV"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "bag.qvStatus"
                        }
                    }
                }
            },
            {
                "id": "QV-TIMER",
                "name": "Timer QV FORM",
                "next": "AGUARDANDO_QV",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "timer",
                "parameters": {
                    "input": {},
                    "timeout": 10800
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-REPROVED-ON-DB",
                "name": "Update request status to reproved qv on database",
                "next": "UPDATE-REQUEST-STATUS-REPROVED-TO-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": "REPROVED",
                        "description": {
                            "$ref": "bag.observations"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-REPROVED-TO-BAG",
                "name": "update request status to reproved to bag",
                "next": "NOTIFY-STATUS-HAS-CHANGED-TO-REPROVED",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "request": {
                            "$js": "({bag}) => { return { ...bag.request, status: 'REPROVED' }}"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-STATUS-HAS-CHANGED-TO-REPROVED",
                "name": "Notify status to realtor",
                "next": "REPROVADO",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "startProcess",
                "parameters": {
                    "input": {
                        "status": "REPROVADO",
                        "request": {
                            "$ref": "bag.request"
                        },
                        "author_id": {
                            "$ref": "bag.author_id"
                        },
                        "buyer_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "notifyMessage"
                }
            },
            {
                "id": "REPROVADO",
                "name": "review REPROVADO",
                "next": "SET-REPROVADO-OBS-TO-BAG",
                "type": "UserTask",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "request": {
                            "$ref": "bag.request"
                        },
                        "card_data": {
                            "date": {
                                "$ref": "bag.request.created_at"
                            },
                            "name": {
                                "$ref": "bag.profileReview.profiles.main.name.value"
                            },
                            "phone": {
                                "$ref": "bag.party_number"
                            }
                        },
                        "observations": {
                            "$js": "({bag}) => !!bag.observations ? bag.observations : []"
                        },
                        "profile_data": {
                            "profiles": {
                                "$ref": "bag.profileReview.profiles"
                            },
                            "ui_schema": {
                                "$ref": "bag.profileReview.ui_schema"
                            },
                            "activity_schema": {
                                "$js": "({bag}) => {const r = bag.profileReview.activity_schema; delete r['definitions']; delete r['status']; return r;}"
                            }
                        },
                        "activity_schema": {
                            "$ref": "bag.cefSettings['REPROVED'].schema"
                        }
                    },
                    "action": "REPROVADO_FORM"
                }
            },
            {
                "id": "SET-REPROVADO-OBS-TO-BAG",
                "name": "Set reprovado obs to bag",
                "next": "REPROVADO-STATUS",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "repStatus": {
                            "$ref": "result.activities[0].data.status"
                        },
                        "observations": {
                            "$js": "({bag, result}) => !!bag.observations ? ([...bag.observations, { status: result.activities[0].data.status, obs: result.activities[0].data.obs }]) : ([{ status: result.activities[0].data.status, obs: result.activities[0].data.obs }])"
                        }
                    }
                }
            },
            {
                "id": "REPROVADO-STATUS",
                "name": "Verify status",
                "next": {
                    "SOLVED": "PROFILE-REVIEW",
                    "default": "REPROVADO"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "bag.repStatus"
                        }
                    }
                }
            },
            {
                "id": "REPROVADO-TIMER",
                "name": "Timer REPROVADO FORM",
                "next": "REPROVADO",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "timer",
                "parameters": {
                    "input": {},
                    "timeout": 10800
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-ERRO-ON-DB",
                "name": "Update request status to erro on database",
                "next": "UPDATE-REQUEST-STATUS-ERRO-TO-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": "ERRO",
                        "description": {
                            "$ref": "bag.observations"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-ERRO-TO-BAG",
                "name": "update request status to erro to bag",
                "next": "NOTIFY-STATUS-HAS-CHANGED-TO-ERRO",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "request": {
                            "$js": "({bag}) => { return { ...bag.request, status: 'ERRO' }}"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-STATUS-HAS-CHANGED-TO-ERRO",
                "name": "Notify status to realtor",
                "next": "ERRO",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "startProcess",
                "parameters": {
                    "input": {
                        "status": "ERRO",
                        "request": {
                            "$ref": "bag.request"
                        },
                        "author_id": {
                            "$ref": "bag.author_id"
                        },
                        "buyer_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "notifyMessage"
                }
            },
            {
                "id": "ERRO",
                "name": "review ERRO",
                "next": "SET-ERRO-OBS-TO-BAG",
                "type": "UserTask",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "request": {
                            "$ref": "bag.request"
                        },
                        "card_data": {
                            "date": {
                                "$ref": "bag.request.created_at"
                            },
                            "name": {
                                "$ref": "bag.profileReview.profiles.main.name.value"
                            },
                            "phone": {
                                "$ref": "bag.party_number"
                            }
                        },
                        "observations": {
                            "$js": "({bag}) => !!bag.observations ? bag.observations : []"
                        },
                        "profile_data": {
                            "profiles": {
                                "$ref": "bag.profileReview.profiles"
                            },
                            "ui_schema": {
                                "$ref": "bag.profileReview.ui_schema"
                            },
                            "activity_schema": {
                                "$js": "({bag}) => {const r = bag.profileReview.activity_schema; delete r['definitions']; delete r['status']; return r;}"
                            }
                        },
                        "activity_schema": {
                            "$ref": "bag.cefSettings['ERROR'].schema"
                        }
                    },
                    "action": "ERRO_FORM"
                }
            },
            {
                "id": "SET-ERRO-OBS-TO-BAG",
                "name": "Set erro obs to bag",
                "next": "ERRO-STATUS",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "erroStatus": {
                            "$ref": "result.activities[0].data.status"
                        },
                        "observations": {
                            "$js": "({bag, result}) => !!bag.observations ? ([...bag.observations, { status: result.activities[0].data.status, obs: result.activities[0].data.obs }]) : ([{ status: result.activities[0].data.status, obs: result.activities[0].data.obs }])"
                        }
                    }
                }
            },
            {
                "id": "ERRO-STATUS",
                "name": "Verify status",
                "next": {
                    "SOLVED": "PROFILE-REVIEW",
                    "default": "ERRO"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "bag.erroStatus"
                        }
                    }
                }
            },
            {
                "id": "ERRO-TIMER",
                "name": "Timer ERRO FORM",
                "next": "ERRO",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "timer",
                "parameters": {
                    "input": {},
                    "timeout": 10800
                }
            },
            {
                "id": "ADDITIONAL_DOCS-BAG",
                "name": "Set task settings to bag",
                "next": "UPDATE-REQUEST-STATUS-ADDITIONAL-DOCUMENTS-ON-DB",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "profiles": {
                            "$ref": "result.activities[0].data.profiles"
                        },
                        "remaining_additional_docs": {
                            "$js": "({result}) => { const profiles = result.activities[0]?.data?.profiles; if(profiles) { const keys = Object.keys(profiles); return keys.flatMap(key => { if(profiles[key].additional_documents) { return profiles[key].additional_documents.reduce((acc,doc) => [...acc, { profile_type: key, key: doc }], [])}}).filter(Boolean)} }"
                        }
                    }
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-ADDITIONAL-DOCUMENTS-ON-DB",
                "name": "Update request status to additional documents on database",
                "next": "UPDATE-REQUEST-STATUS-ADDITIONAL-DOCUMENTS-TO-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": "ADDITIONAL_DOCUMENTS",
                        "description": {
                            "$ref": "bag.observations"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-ADDITIONAL-DOCUMENTS-TO-BAG",
                "name": "update request status to additional documents to bag",
                "next": "NOTIFY-STATUS-HAS-CHANGED-TO-ADD-DOCS",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "request": {
                            "$js": "({bag}) => { return { ...bag.request, status: 'ADDITIONAL_DOCUMENTS' }}"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-STATUS-HAS-CHANGED-TO-ADD-DOCS",
                "name": "Notify status to realtor",
                "next": "ADDITIONAL_DOCS-LENGTH",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "startProcess",
                "parameters": {
                    "input": {
                        "status": "DOCUMENTOS ADICIONAIS",
                        "request": {
                            "$ref": "bag.request"
                        },
                        "author_id": {
                            "$ref": "bag.author_id"
                        },
                        "buyer_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "notifyMessage"
                }
            },
            {
                "id": "ADDITIONAL_DOCS-LENGTH",
                "name": "cef status",
                "next": {
                    "0": "PROFILES-BAG",
                    "default": "ADDITIONAL_DOCS-TAKE-FIRST",
                    "undefined": "PROFILES-BAG"
                },
                "type": "Flow",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "bag.remaining_additional_docs.length"
                        }
                    }
                }
            },
            {
                "id": "ADDITIONAL_DOCS-TAKE-FIRST",
                "name": "bag first doc",
                "next": "ADDITIONAL_DOCS-GETINFO",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "setToBag",
                "parameters": {
                    "input": {
                        "current_doc": {
                            "$js": "({bag}) => bag.remaining_additional_docs.shift()"
                        },
                        "remaining_additional_docs": {
                            "$js": "({bag}) => { let result = bag.remaining_additional_docs; result.shift(); return result; }"
                        }
                    }
                }
            },
            {
                "id": "ADDITIONAL_DOCS-GETINFO",
                "name": "Submit ADDITIONAL_DOCS",
                "next": "ADDITIONAL_DOCS-RESPONSE",
                "type": "SubProcess",
                "lane_id": "REVIEWER-LATCHED",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "bag.current_doc.key"
                        },
                        "chat_id": {
                            "$ref": "bag.chat_id"
                        },
                        "profile": {
                            "$js": "({bag}) => bag.profiles[bag.current_doc.profile_type]"
                        },
                        "request_id": {
                            "$ref": "bag.request.id"
                        },
                        "mobile_phone": {
                            "$ref": "bag.party_number"
                        },
                        "profile_type": {
                            "$ref": "bag.current_doc.profile_type"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "getInfo",
                    "valid_response": "finished"
                }
            },
            {
                "id": "ADDITIONAL_DOCS-RESPONSE",
                "name": "Verify getInfo response",
                "next": {
                    "SUCCESS": "ADDITIONAL_DOCS-RESPONSE-BAG",
                    "default": "CLOSE-INACTIVE",
                    "FAIL-QUIT": "CLOSE-QUIT",
                    "FAIL-TIMEOUT": "CLOSE-INACTIVE",
                    "SUCCESS-NOOP": "ADDITIONAL_DOCS-RESPONSE-BAG"
                },
                "type": "Flow",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input": {
                        "key": {
                            "$ref": "result.data.status"
                        }
                    }
                }
            },
            {
                "id": "ADDITIONAL_DOCS-RESPONSE-BAG",
                "name": "Set task settings to bag",
                "next": "ADDITIONAL_DOCS-LENGTH",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "profiles": {
                            "main": {
                                "$js": "({bag,result}) => (bag.current_doc.profile_type === 'main') ? result.data.profile : bag.profiles.main"
                            },
                            "second": {
                                "$js": "({bag,result}) => (bag.current_doc.profile_type === 'second') ? result.data.profile : bag.profiles.second"
                            }
                        }
                    }
                }
            },
            {
                "id": "PROFILES-BAG",
                "name": "update profiles, set profiles to main",
                "next": "CLOSE-REVIEW",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "profile_type": "main"
                    }
                }
            },
            {
                "id": "REJEITADO-NOTIFY",
                "name": "Notify rejected request",
                "next": "UPDATE-REQUEST-STATUS-REJECTED-ON-DB",
                "type": "UserTask",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input": {
                        "chat_id": {
                            "$ref": "bag.chat_id"
                        },
                        "messages": [
                            {
                                "message": "Bela: Que pena, infelizmente vou precisar encerrar o seu atendimento. At√© mais!!"
                            }
                        ],
                        "party_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "action": "NOTIFY_MESSAGE",
                    "timeout": 1
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-REJECTED-ON-DB",
                "name": "Update request status to rejected on database",
                "next": "UPDATE-REQUEST-STATUS-REJECTED-TO-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": "REJECTED",
                        "description": {
                            "$ref": "bag.observations"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-REJECTED-TO-BAG",
                "name": "update request status to rejected to bag",
                "next": "CLOSE-REJECT",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "request": {
                            "$js": "({bag}) => { return { ...bag.request, status: 'rejected' }}"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-STATUS-HAS-CHANGED-TO-REJECT",
                "name": "Notify status to realtor",
                "next": "CLOSE-REJECT",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "startProcess",
                "parameters": {
                    "input": {
                        "status": "REJEITADO",
                        "request": {
                            "$ref": "bag.request"
                        },
                        "author_id": {
                            "$ref": "bag.author_id"
                        },
                        "buyer_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "notifyMessage"
                }
            },
            {
                "id": "CLOSE-REVIEW",
                "name": "Finish request status REJEITADO",
                "next": null,
                "type": "Finish",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input": {
                        "status": "REVIEW",
                        "profiles": {
                            "$ref": "bag.profiles"
                        },
                        "observations": {
                            "$ref": "bag.observations"
                        },
                        "profile_type": "main"
                    }
                }
            },
            {
                "id": "CLOSE-REJECT",
                "name": "Finish request status REJEITADO",
                "next": null,
                "type": "Finish",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input": {
                        "status": "REJECT",
                        "profiles": {
                            "$ref": "bag.profiles"
                        },
                        "observations": {
                            "$ref": "bag.observations"
                        },
                        "profile_type": {
                            "$ref": "bag.profile_type"
                        }
                    }
                }
            },
            {
                "id": "UPDATE-REQUEST",
                "name": "Update Request",
                "next": "UPDATE-REQUEST-STATUS-APPROVED-OR-CONDITIONED-ON-DB",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": {
                            "$ref": "bag.request.status"
                        },
                        "profiles": {
                            "$ref": "bag.profiles"
                        },
                        "request_id": {
                            "$ref": "bag.request.id"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.SERVICE_API}}}/rpc/requests/create-request-from-metadata"
                        },
                        "verb": "POST",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    }
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-APPROVED-OR-CONDITIONED-ON-DB",
                "name": "Update request status to approved on database",
                "next": "UPDATE-REQUEST-STATUS-APPROVED-OR-CONDITIONED-TO-BAG",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "status": {
                            "$ref": "bag.cefFormData.status"
                        },
                        "description": {
                            "$ref": "bag.observations"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-REQUEST-STATUS-APPROVED-OR-CONDITIONED-TO-BAG",
                "name": "update request status to approved to bag",
                "next": "NOTIFY-STATUS-HAS-CHANGED-TO-APPROVED-OR-COND",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "SetToBag",
                "parameters": {
                    "input": {
                        "request": {
                            "$js": "({bag}) => { return { ...bag.request, status: bag.cefFormData.status }}"
                        }
                    }
                }
            },
            {
                "id": "NOTIFY-STATUS-HAS-CHANGED-TO-APPROVED-OR-COND",
                "name": "Notify status to realtor",
                "next": "SET-CREDIT-LIMIT-ON-DB",
                "type": "SystemTask",
                "lane_id": "REQUESTBOT",
                "category": "startProcess",
                "parameters": {
                    "input": {
                        "status": {
                            "$js": "({bag}) => bag.cefFormData.status === 'APPROVED' ? 'APROVADO' : bag.cefFormData.status === 'CONDITIONED' ? 'CONDICIONADO' : null "
                        },
                        "request": {
                            "$ref": "bag.request"
                        },
                        "author_id": {
                            "$ref": "bag.author_id"
                        },
                        "buyer_number": {
                            "$ref": "bag.party_number"
                        }
                    },
                    "actor_data": {
                        "$ref": "bag.buyer"
                    },
                    "workflow_name": "notifyMessage"
                }
            },
            {
                "id": "SET-CREDIT-LIMIT-ON-DB",
                "name": "Update Request",
                "next": "UPDATE-PROFILE-ON-DB",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "description": {
                            "$ref": "bag.observations"
                        },
                        "credit_limit": {
                            "$ref": "bag.request.credit_limit"
                        }
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/requests?id=eq.{{ bag.request.id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "UPDATE-PROFILE-ON-DB",
                "name": "Update profile on database",
                "next": "CLOSE-SUCCESS",
                "type": "SystemTask",
                "lane_id": "REVIEWER-LATCHED",
                "category": "HTTP",
                "parameters": {
                    "input": {
                        "credit_limit": {
                            "$ref": "bag.request.credit_limit"
                        },
                        "current_request_id": {
                            "$ref": "bag.request.id"
                        },
                        "documents_review_status": "VERIFIED"
                    },
                    "request": {
                        "url": {
                            "$mustache": "{{{environment.POSTGREST}}}/profiles?id=eq.{{ bag.buyer.profile_id }}"
                        },
                        "verb": "PATCH",
                        "headers": {
                            "ContentType": "application/json"
                        }
                    },
                    "valid_response_codes": [
                        200,
                        201,
                        203,
                        204
                    ]
                }
            },
            {
                "id": "CLOSE-SUCCESS",
                "name": "Finish request",
                "next": null,
                "type": "Finish",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input": {
                        "status": "SUCCESS",
                        "laudo_id": {
                            "$ref": "bag.laudo_id"
                        },
                        "profiles": {
                            "$ref": "bag.profiles"
                        },
                        "observations": {
                            "$ref": "bag.observations"
                        },
                        "profile_type": {
                            "$ref": "bag.profile_type"
                        }
                    }
                }
            },
            {
                "id": "CLOSE-INACTIVE",
                "name": "Finish request",
                "next": null,
                "type": "Finish",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input": {
                        "status": "INACTIVE",
                        "profiles": {
                            "$ref": "bag.profiles"
                        },
                        "profile_type": {
                            "$ref": "bag.profile_type"
                        }
                    }
                }
            },
            {
                "id": "CLOSE-QUIT",
                "name": "Finish request",
                "next": null,
                "type": "Finish",
                "lane_id": "REQUESTBOT",
                "parameters": {
                    "input": {
                        "status": "QUIT",
                        "profiles": {
                            "$ref": "bag.profiles"
                        },
                        "profile_type": {
                            "$ref": "bag.profile_type"
                        }
                    }
                }
            }
        ],
        "prepare": [],
        "environment": {
            "JWT_KEY": "JWT_KEY_BP",
            "CHAT_API": "CHAT_API",
            "POSTGREST": "POSTGREST",
            "SERVICE_API": "SERVICE_API"
        },
        "requirements": [
            "core"
        ]
    }
}